
"use strict";

angular.module('roger_federation.Workflows')
  .controller('NewWorkflowController', ['$scope', '$state', '$stateParams', '$modalInstance', '$log', 'growl', 'WorkflowService', newWorkflowController]);

function newWorkflowController($scope, $state, $stateParams, $modalInstance, $log, growl, WorkflowService) {
  $scope.workflow = {
    name: '',
    version: '',
    type: '',
    creatorName: '',
    description: '',
    roleProductSet: '',
    diagramType:  $stateParams.diagramType,
    federationId: '',
    federationName: ''
  };


  $scope.submit = function(isValid) {
    var newWorkflow = {
      name: $scope.workflow.name,
      version: $scope.workflow.version,
      type: $scope.workflow.type,
      description: $scope.workflow.description,
      creatorName: '',
      diagramType:  $stateParams.diagramType,
      federationId: '',
      federationName: ''
    };
    WorkflowService.saveBpmnGraph(JSON.stringify(newWorkflow)).then(function(result) {
      $state.go('workflows.editor', {
        workflowId: result.data.name
      });
      $modalInstance.close('ok');
      $scope.$close(true);

    }, function(result) {
      growl.error("Failed to create diagram: " + result);
    });
  };

  $scope.useActivePolicy = function() {
    WorkflowService.getActiveFederation().then(function(result) {
        $state.go('workflows.editor', {
            workflowId: result.name
        });
        $modalInstance.close('ok');
        $scope.$close(true);
    }, function(result) {
        growl.error("The currently active policy is not compatible with the UI (policy files created manually are not compatible, you must use a policy generated by the UI).  Please create a new policy instead");
    });
  };

  $scope.cancel = function() {
    $modalInstance.dismiss('cancel');
  };
}
